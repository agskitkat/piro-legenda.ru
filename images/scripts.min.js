// include where
"use strict";
$().ready(function() {
    var debug = true;
    var cart = [];
    $('.good_quantity_block .increment, .add-control .increment').click(function() {
        var quantity = $(this).parent().find("input").val();
        quantity++;
        $(this).parent().find("input").val(quantity);
        if(quantity > 1) {
            $(this).parent().find(".decrement").removeClass('disabled');
        }
    });

    $('.good_quantity_block .decrement, .add-control .decrement').click(function() {
        var quantity = $(this).parent().find("input").val();
        quantity--;
        if( !$(this).hasClass('disabled')) {
            $(this).parent().find("input").val(quantity);
            if (quantity === 1) {
                $(this).addClass('disabled');
            }
        }
    });

    $('.add_to_cart_block .add_button').click(function() {
        var button = $(this);
        if(!button.is(".error") && !button.is(".disabled")) {
            var ID = button.attr("data-product-id") ? $(this).attr("data-product-id") : false;
            if (ID) {
                var bv = button.parent().find("input").val();
                var quantity = bv ? bv : 1;
                var good_id = button.parent().find("input").attr('good_id');
                button.html("<div class=\"loader_button\"></div>").addClass("active");
                setTimeout(function () {
                    to_cart("add", ID, quantity, function (data) {
                        if (!data) {
                            button.html("ОШИБКА").removeClass("active").addClass("error");
                            setTimeout(function () {
                                button.html("Повторите попытку").removeClass("error")
                            }, 3000);
                            return false;
                        }

                        if (data.quantity) {
                            update_mini_cart(data.price, data.quantity);
                            button.html("ДОБАВЛЕНО");
                            setTimeout(function () {
                                button.html("В КОРЗИНУ").removeClass("active");
                            }, 5000);
                        } else {
                            button.html("Нет в наличии").removeClass("active").addClass("disabled");
                        }
                    });
                }, 500);
            } else {
                button.html("ОШИБКА").removeClass("active").addClass("error");
                setTimeout(function () {
                    button.html("Повторите попытку").removeClass("error")
                }, 3000);
            }
        }
    });

    $('.good .remove').click(function() {
        var button = $(this);
        var container = $(this).closest(".good");
        var ID = button.find("a").attr("data-product-id");

        var bv = button.parent().find("input").val();
        var quantity = bv ?  bv : 1;

        container.css({"opacity":"0"});

        to_cart("delete", ID, quantity, function(data) {
            // TODO Делать удалить товар
            update_mini_cart(data.price, data.quantity);
            update_cart(data);
            checkOrderDisable(data.price);
            container.remove();
        });
    });

    $('.good input').change(function() {
        var quantity = $(this).val();
        var ID = $(this).attr("data-product-id");

        if(quantity >= 1) {
            to_cart("update", ID, quantity, function(data) {
                update_mini_cart(data.price, data.quantity);
                update_cart(data);
                checkOrderDisable(data.price);
            });
        } else {
            var container = $(this).closest(".good");
            container.css({"opacity":"0"});
            to_cart("delete", ID, quantity, function(data) {
                update_mini_cart(data.price, data.quantity);
                update_cart(data);
                checkOrderDisable(data.price);
                container.remove();
            });

        }
    });

    $('.page-cart .add-control').each(function(k, v){
        var quantity = $(this).find("input").val();
        if(quantity > 1) {
            $(this).find(".decrement").removeClass('disabled');
        }
    });

    $('.page-cart .add-control .increment').unbind('click').click(function() {
        var quantity = $(this).parent().find("input").val();
        var ID = $(this).closest(".add-control").find(".count").attr("data-product-id");
        quantity++;
        $(this).parent().find("input").val(quantity);
        if(quantity > 1) {
            $(this).parent().find(".decrement").removeClass('disabled');
        }
        to_cart("update", ID, quantity, function(data) {
            update_mini_cart(data.price, data.quantity);
            update_cart(data);
            checkOrderDisable(data.price);
        });
    });

    $('.page-cart .add-control .decrement').unbind('click').click(function() {
        var quantity = $(this).parent().find("input").val();
        var ID = $(this).closest(".add-control").find(".count").attr("data-product-id");
        quantity--;
        if( !$(this).hasClass('disabled')) {
            $(this).parent().find("input").val(quantity);
            if (quantity === 1) {
                $(this).addClass('disabled');
            }
        }
        to_cart("update", ID, quantity, function(data) {
            update_mini_cart(data.price, data.quantity);
            update_cart(data);
            checkOrderDisable(data.price);
        });
    });

    function to_cart(action, good, quantity, callback) {
        var obj = {
            type: action,
            product_id: good
        }
        if(quantity) {
            obj.quantity = +quantity;
        }
        var jsonData = JSON.stringify(obj);
        $.post( "/local/ajax/add2basket.php", jsonData,  function( data ) {
            callback(data);
        }).fail(function(){
            callback(false);
        });
    }

    function update_mini_cart(p, i) {
        if(!i) {
            p = 0;
        }

        if( $(document).width() < 1024) {
            if(i >= 100) {
                i = "+99";
            }
            $(".cart-block-header .items-count").html(i);
        } else {
            $(".cart-block-header .items-count").html(i+ "<span class=\"items-name\">"+declOfNum(+i, ["товар","товара","товаров"])+"</span>");
        }

        $(".cart-block-header .cart-sum").html("<div class=\"cart-sum\">"+p+"</div>");
    }


    function checkOrderDisable(p) {
        if(p < 49990) {
            $(".btn-block-desctop .button").addClass("disabled");
        } else {
            $(".btn-block-desctop .button").removeClass("disabled");
        }

    }

    function update_cart(data) {
        $(".cart-calc .sum").html((data.goodPrice ? data.goodPrice : 0) + "*");
        $(".cart-info .sum").html((data.price ? data.price : 0));
        $(".cart-info .sum.sale_off").html((data.base_price ? data.base_price : 0));

        $(".cart-specific .pair:first .value").html((data.weight ? data.weight :0)  + " кг");
        $(".cart-specific .pair:last .value").html((data.size ? data.size : 0)  + " куба");

        var diskount_precents = data.diskount_precents ? "-" + data.diskount_precents + "% cкидкa" : "";

        $(".info-1 .sale-value").html(diskount_precents);
    }

    $(".btn-block-desctop .button").click( function(e) {
        e.preventDefault();
        if(!$(this).hasClass("disabled")) {
            window.location = $(this).attr("href");
        }
    });
});
/*!
 * in-view 0.6.1 - Get notified when a DOM element enters or exits the viewport.
 * Copyright (c) 2016 Cam Wiegert <cam@camwiegert.com> - https://camwiegert.github.io/in-view
 * License: MIT
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.inView=e():t.inView=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}var i=n(2),o=r(i);t.exports=o["default"]},function(t,e){function n(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}t.exports=n},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),o=r(i),u=n(3),f=r(u),s=n(4),c=function(){if("undefined"!=typeof window){var t=100,e=["scroll","resize","load"],n={history:[]},r={offset:{},threshold:0,test:s.inViewport},i=(0,o["default"])(function(){n.history.forEach(function(t){n[t].check()})},t);e.forEach(function(t){return addEventListener(t,i)}),window.MutationObserver&&addEventListener("DOMContentLoaded",function(){new MutationObserver(i).observe(document.body,{attributes:!0,childList:!0,subtree:!0})});var u=function(t){if("string"==typeof t){var e=[].slice.call(document.querySelectorAll(t));return n.history.indexOf(t)>-1?n[t].elements=e:(n[t]=(0,f["default"])(e,r),n.history.push(t)),n[t]}};return u.offset=function(t){if(void 0===t)return r.offset;var e=function(t){return"number"==typeof t};return["top","right","bottom","left"].forEach(e(t)?function(e){return r.offset[e]=t}:function(n){return e(t[n])?r.offset[n]=t[n]:null}),r.offset},u.threshold=function(t){return"number"==typeof t&&t>=0&&t<=1?r.threshold=t:r.threshold},u.test=function(t){return"function"==typeof t?r.test=t:r.test},u.is=function(t){return r.test(t,r)},u.offset(0),u}};e["default"]=c()},function(t,e){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=function(){function t(e,r){n(this,t),this.options=r,this.elements=e,this.current=[],this.handlers={enter:[],exit:[]},this.singles={enter:[],exit:[]}}return r(t,[{key:"check",value:function(){var t=this;return this.elements.forEach(function(e){var n=t.options.test(e,t.options),r=t.current.indexOf(e),i=r>-1,o=n&&!i,u=!n&&i;o&&(t.current.push(e),t.emit("enter",e)),u&&(t.current.splice(r,1),t.emit("exit",e))}),this}},{key:"on",value:function(t,e){return this.handlers[t].push(e),this}},{key:"once",value:function(t,e){return this.singles[t].unshift(e),this}},{key:"emit",value:function(t,e){for(;this.singles[t].length;)this.singles[t].pop()(e);for(var n=this.handlers[t].length;--n>-1;)this.handlers[t][n](e);return this}}]),t}();e["default"]=function(t,e){return new i(t,e)}},function(t,e){"use strict";function n(t,e){var n=t.getBoundingClientRect(),r=n.top,i=n.right,o=n.bottom,u=n.left,f=n.width,s=n.height,c={t:o,r:window.innerWidth-u,b:window.innerHeight-r,l:i},a={x:e.threshold*f,y:e.threshold*s};return c.t>e.offset.top+a.y&&c.r>e.offset.right+a.x&&c.b>e.offset.bottom+a.y&&c.l>e.offset.left+a.x}Object.defineProperty(e,"__esModule",{value:!0}),e.inViewport=n},function(t,e){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(e,function(){return this}())},function(t,e,n){var r=n(5),i="object"==typeof self&&self&&self.Object===Object&&self,o=r||i||Function("return this")();t.exports=o},function(t,e,n){function r(t,e,n){function r(e){var n=x,r=m;return x=m=void 0,E=e,w=t.apply(r,n)}function a(t){return E=t,j=setTimeout(h,e),M?r(t):w}function l(t){var n=t-O,r=t-E,i=e-n;return _?c(i,g-r):i}function d(t){var n=t-O,r=t-E;return void 0===O||n>=e||n<0||_&&r>=g}function h(){var t=o();return d(t)?p(t):void(j=setTimeout(h,l(t)))}function p(t){return j=void 0,T&&x?r(t):(x=m=void 0,w)}function v(){void 0!==j&&clearTimeout(j),E=0,x=O=m=j=void 0}function y(){return void 0===j?w:p(o())}function b(){var t=o(),n=d(t);if(x=arguments,m=this,O=t,n){if(void 0===j)return a(O);if(_)return j=setTimeout(h,e),r(O)}return void 0===j&&(j=setTimeout(h,e)),w}var x,m,g,w,j,O,E=0,M=!1,_=!1,T=!0;if("function"!=typeof t)throw new TypeError(f);return e=u(e)||0,i(n)&&(M=!!n.leading,_="maxWait"in n,g=_?s(u(n.maxWait)||0,e):g,T="trailing"in n?!!n.trailing:T),b.cancel=v,b.flush=y,b}var i=n(1),o=n(8),u=n(10),f="Expected a function",s=Math.max,c=Math.min;t.exports=r},function(t,e,n){var r=n(6),i=function(){return r.Date.now()};t.exports=i},function(t,e,n){function r(t,e,n){var r=!0,f=!0;if("function"!=typeof t)throw new TypeError(u);return o(n)&&(r="leading"in n?!!n.leading:r,f="trailing"in n?!!n.trailing:f),i(t,e,{leading:r,maxWait:e,trailing:f})}var i=n(7),o=n(1),u="Expected a function";t.exports=r},function(t,e){function n(t){return t}t.exports=n}])});
! function(t, e) {
    function n(t) {
        var e = {},
            n = {
                type: "contentType",
                name: "query",
                withParents: "withParent"
            };
        t.parentType && t.parentId && (e[t.parentType + "Id"] = t.parentId);
        for (var a in t) r(t, a) && t[a] && (e[r(n, a) ? n[a] : a] = t[a]);
        return e
    }

    function r(t, e) {
        return t.hasOwnProperty(e)
    }

    function a(t) {
        var n = e.console;
        n && n.error && n.error(t)
    }
    t.kladr = {},
        function() {
            var n = "https:" == e.location.protocol ? "https:" : "http:";
            t.kladr.url = n + "//kladr-api.ru/api.php"
        }(), t.kladr.type = {
        region: "region",
        district: "district",
        city: "city",
        street: "street",
        building: "building"
    }, t.kladr.typeCode = {
        city: 1,
        settlement: 2,
        village: 4
    }, t.kladr.validate = function(e) {
        var n = t.kladr.type;
        switch (e.type) {
            case n.region:
            case n.district:
            case n.city:
                if (e.parentType && !e.parentId) return a("parentId undefined"), !1;
                break;
            case n.street:
                if (e.parentType != n.city && e.parentType != n.street) return a('parentType must equal "city" or "street"'), !1;
                if (!e.parentId) return a("parentId undefined"), !1;
                break;
            case n.building:
                if (!e.zip) {
                    if (!~t.inArray(e.parentType, [n.street, n.city])) return a('parentType must equal "street" or "city"'), !1;
                    if (!e.parentId) return a("parentId undefined"), !1
                }
                break;
            default:
                if (!e.oneString) return a("type incorrect"), !1
        }
        return e.oneString && e.parentType && !e.parentId ? (a("parentId undefined"), !1) : e.typeCode && e.type != n.city ? (a('type must equal "city"'), !1) : e.limit < 1 ? (a("limit must greater than 0"), !1) : !0
    }, t.kladr.api = function(e, r) {
        if (!r) return void a("Callback undefined");
        if (!t.kladr.validate(e)) return void r([]);
        var i = setTimeout(function() {
            r([]), i = null
        }, 3e3);
        t.ajax({
            url: t.kladr.url + "?callback=?",
            type: "get",
            data: n(e),
            dataType: "jsonp"
        }).done(function(t) {
            i && (r(t.result || []), clearTimeout(i))
        })
    }, t.kladr.check = function(e, n) {
        return n ? (e.withParents = !1, e.limit = 1, void t.kladr.api(e, function(t) {
            n(t && t.length ? t[0] : !1)
        })) : void a("Callback undefined")
    }
}(jQuery, window),
    function(t, e, n, r) {
        function a(r, a) {
            function i(t, e) {
                return t.isGet ? s.get(t.str[0]) : (s.set(t), void e())
            }
            var s = function() {
                var e = "kladr-data",
                    n = r.data(e);
                return n || (n = t.extend({}, u, d), r.data(e, n)), {
                    set: function(t) {
                        if (t.obj)
                            for (var a in t.obj) l(t.obj, a) && l(u, a) && (n[a] = t.obj[a]);
                        else t.str && !t.isGet && l(u, t.str[0]) && (n[t.str[0]] = t.str[1]);
                        r.data(e, n)
                    },
                    get: function(t) {
                        return l(u, t) || l(d, t) ? n[t] : void 0
                    },
                    _set: function(t, a) {
                        n[t] = a, r.data(e, n)
                    },
                    _get: function(t) {
                        return l(n, t) ? n[t] : void 0
                    }
                }
            }();
            return i(a, function() {
                function a(a) {
                    var i = t(n.getElementById("kladr_autocomplete"));
                    i.length || (i = t('<div id="kladr_autocomplete"></div>').appendTo(n.body));
                    var l = x("guid");
                    l ? (V = i.find(".autocomplete" + l), A = i.find(".spinner" + l), t(e).off(L), r.off(L), V.off(L)) : (l = o(), P("guid", l), r.attr("autocomplete", "off"), V = t('<ul class="autocomplete' + l + ' autocomplete" style="display: none;"></ul>').appendTo(i), A = t('<div class="spinner' + l + ' spinner" style="display: none;"></div>').appendTo(i), m(), f(), b()), a()
                }

                function i(e, n) {
                    var r, a, i, o;
                    V.empty();
                    for (var l = 0; l < e.length; l++) r = e[l], a = x("valueFormat")(r, n), i = x("labelFormat")(r, n), o = t('<a data-val="' + a + '">' + i + "</a>"), o.data("kladr-object", r), t("<li></li>").append(o).appendTo(V)
                }

                function d() {
                    var e, n, r;
                    V.empty(), e = "", n = u.noResultText, null != n && "" != n && (r = t('<a data-val="' + e + '">' + n + "</a>"), r.data("kladr-object", {}), t("<li></li>").append(r).appendTo(V))
                }

                function f() {
                    var t = r.offset(),
                        e = r.outerWidth(),
                        n = r.outerHeight();
                    if (t && (f.top != t.top || f.left != t.left || f.width != e || f.height != n)) {
                        f.top = t.top, f.left = t.left, f.width = e, f.height = n, V.css({
                            top: t.top + n + "px",
                            left: t.left
                        });
                        var a = V.outerWidth() - V.width();
                        V.width(e - a);
                        var i = A.width(),
                            o = A.height();
                        A.css({
                            top: t.top + (n - o) / 2 - 1,
                            left: t.left + e - i - 2
                        })
                    }
                }

                function p(e) {
                    if (!(e.which > 8 && e.which < 46)) {
                        if (r.data(z, !1), !w("open_before")) return void v();
                        _(null);
                        var n = r.val();
                        if (!t.trim(n)) return B(!1), void v();
                        var a = C(n);
                        if (!w("send_before", a)) return void v();
                        T(), w("send"), x("source")(a, function(e) {
                            return w("receive", e), r.is(":focus") ? t.trim(r.val()) && e.length ? (G = !0, i(e, a), f(), I(), V.slideDown(50), void w("open")) : (I(), _(null), d(), f(), V.slideDown(50), w("open"), void(G = !1)) : (I(), void v())
                        })
                    }
                }

                function v() {
                    w("close_before") && (V.empty().hide(), w("close"))
                }

                function y(t) {
                    var e = V.find("li.active");
                    switch (t.which) {
                        case c.up:
                            e.length ? (e.removeClass("active"), e.prev().length && (e = e.prev())) : e = V.find("li").last(),
                                function() {
                                    var t = V.scrollTop(),
                                        n = V.offset(),
                                        r = e.outerHeight(),
                                        a = e.offset();
                                    a.top - n.top < 0 && V.scrollTop(t - r)
                                }(), e.addClass("active"), k();
                            break;
                        case c.down:
                            e.length ? (e.removeClass("active"), e.next().length && (e = e.next())) : e = V.find("li").first(), e.length && ! function() {
                                var t = V.scrollTop(),
                                    n = V.height(),
                                    r = V.offset(),
                                    a = e.outerHeight(),
                                    i = e.offset();
                                i.top - r.top + a > n && V.scrollTop(t + a)
                            }(), e.addClass("active"), k();
                            break;
                        case c.enter:
                            v()
                    }
                }

                function h(e) {
                    var n = t(e);
                    n.is("a") && (n = n.parents("li")), n.addClass("active"), k(), v()
                }

                function k() {
                    if (w("select_before")) {
                        var t = V.find(".active a");
                        t.length && (r.val(t.attr("data-val")).data(z, !0), B(!1), _(t.data("kladr-object")), w("select", x("current")))
                    }
                }

                function g() {
                    function e(t, e) {
                        B(e), _(t)
                    }
                    if (x("verify") && w("check_before")) {
                        var n = t.trim(r.val());
                        if (!n) return void e(null, !1);
                        if (x("current")) return void B(!1);
                        var a = C(n);
                        if (a.withParents = !1, a.limit = 10, !w("send_before", a)) return e(null, !1), void w("check", null);
                        T(), w("send"), x("source")(a, function(n) {
                            function i(t, n) {
                                I(), e(t, n)
                            }
                            if (w("receive"), !t.trim(r.val())) return void i(null, !1);
                            for (var o = a.name.toLowerCase(), l = null, u = null, d = 0; d < n.length; d++)
                                if (l = n[d].name.toLowerCase(), o == l) {
                                    u = n[d];
                                    break
                                }
                            u && r.val(x("valueFormat")(u, a)), i(u, !u), w("check", u)
                        })
                    }
                }

                function m() {
                    function e() {
                        r.attr(i, !0)
                    }

                    function n(t, e) {
                        t ? r.val(x("valueFormat")(t, e)) : B(!0), _(t), r.removeAttr(i)
                    }
                    var a = {
                            setValue: function(e) {
                                return "object" === t.type(e) ? a.setValueByObject(e) : "number" === t.type(e) ? a.setValueById(e) : "string" === t.type(e) ? a.setValueByName(e) : e ? a : a.clear()
                            },
                            setValueByName: function(r) {
                                if (r = t.trim(r + "")) {
                                    var i = C("");
                                    if (i.name = S(r), i.withParents = !1, i.limit = 10, !w("send_before", i)) return n(null, i), a;
                                    e(), w("send"), x("source")(i, function(t) {
                                        w("receive");
                                        for (var e = i.name.toLowerCase(), r = null, a = null, o = 0; o < t.length; o++)
                                            if (r = t[o].name.toLowerCase(), e == r) {
                                                a = t[o];
                                                break
                                            }
                                        n(a, i)
                                    })
                                }
                                return a
                            },
                            setValueById: function(r) {
                                var i = C("");
                                return i.parentType = i.type, i.parentId = r, i.limit = 1, e(), t.kladr.api(i, function(t) {
                                    t.length ? n(t[0], i) : n(null, i)
                                }), a
                            },
                            setValueByObject: function(t) {
                                return n(t, C("")), a
                            },
                            clear: function() {
                                return n(null, null), a
                            }
                        },
                        i = "data-kladr-autofill-lock";
                    P("controller", a)
                }

                function b() {
                    function e() {
                        var e = r.val();
                        if (e) {
                            var n, a = C(e),
                                i = a.type,
                                o = a.parentType,
                                l = t.kladr.type,
                                u = !0,
                                d = x("controller").setValueByName;
                            return i == l.street && o != l.city && (u = !1), i != l.building || ~t.inArray(o, [l.street, l.city]) || (u = !1), n = r.attr("data-kladr-autofill-lock"), n && x("current") && u && d(e), !!x("current")
                        }
                        return !1
                    }
                    var n = 0;
                    ! function a() {
                        ++n > 5 || e() || setTimeout(a, 100)
                    }()
                }

                function w(e, n) {
                    if (!e) return !0;
                    var a = e.replace(/_([a-z])/gi, function(t, e) {
                        return e.toUpperCase()
                    });
                    return r.trigger("kladr_" + e, n), "function" === t.type(x(a)) ? x(a).call(r.get(0), n) !== !1 : !0
                }

                function T() {
                    x("spinner") && x("showSpinner")(A)
                }

                function I() {
                    x("spinner") && x("hideSpinner")(A)
                }

                function C(t) {
                    var e, n = {},
                        r = ["token", "key", "type", "typeCode", "parentType", "parentId", "oneString", "withParents", "limit", "strict"];
                    for (e = 0; e < r.length; e++) n[r[e]] = x(r[e]);
                    n.name = S(t);
                    var a, i = x("parentInput");
                    return i && (a = j(i, n.type), a && (n.parentType = a.type, n.parentId = a.id)), n.oneString && (n.withParents = !0), n
                }

                function j(e, n) {
                    var r, a = t.kladr.getInputs(e),
                        i = t.kladr.type,
                        o = {},
                        u = null;
                    a.each(function() {
                        var e, n = t(this);
                        (e = n.attr("data-kladr-id")) && (o[n.attr("data-kladr-type")] = e)
                    });
                    for (r in i) {
                        if (r == n) return u;
                        l(i, r) && o[r] && (u = {
                            type: r,
                            id: o[r]
                        })
                    }
                    return u
                }

                function S(t) {
                    for (var e = "abcdefghijklmnopqrstuvwxyz", n = t.toLowerCase(), r = 0; r < n.length; r++)
                        if (~e.indexOf(n[r])) return B(!0), t;
                    return B(!1), t
                }

                function _(t) {
                    var e = x("current");
                    (e && e.id) !== (t && t.id) && (P("current", t), t && t.id ? r.attr("data-kladr-id", t.id) : r.removeAttr("data-kladr-id"), x("oneString") && t && t.contentType && r.attr("data-kladr-type", t.contentType), w("change", t))
                }

                function B(t) {
                    t ? r.addClass("kladr-error") : r.removeClass("kladr-error")
                }

                function x(t) {
                    return s._get(t)
                }

                function P(t, e) {
                    s._set(t, e)
                }
                var V = null,
                    A = null,
                    G = !1,
                    L = ".kladr",
                    z = "kladrInputChange";
                a(function() {
                    var n = !1,
                        a = !0,
                        i = "";
                    r.attr("data-kladr-type", x("type") || "").attr("data-kladr-one-string", x("oneString") || null).on("keyup" + L, p).on("keydown" + L, y).on("blur" + L, function() {
                        !n && r.data(z) && i != r.val() && r.change()
                    }).on("blur" + L + " change" + L, function(t) {
                        return n ? void 0 : ("change" == t.type && (i = r.val()), a && (a = !1, g()), !G && u.checkEmptyRespone && r.val(""), v(), !1)
                    }).on("focus" + L, function() {
                        a = !0
                    }), V.on("touchstart" + L + " mousedown" + L, "li, a", function(t) {
                        t.preventDefault(), n = !0, h(this), n = !1
                    }), t(e).on("resize" + L, f)
                })
            })
        }

        function i(e, n) {
            var a = {
                obj: !1,
                str: !1,
                isGet: !1
            };
            return "object" === t.type(e) ? (a.obj = e, a) : ("string" === t.type(e) && (a.str = [e, n], a.isGet = n === r), a)
        }

        function o() {
            return o.guid ? ++o.guid : o.guid = 1
        }

        function l(t, e) {
            return t.hasOwnProperty(e)
        }
        var u = {
                token: null,
                key: null,
                type: null,
                typeCode: null,
                parentType: null,
                parentId: null,
                limit: 10,
                oneString: !1,
                withParents: !1,
                noResultText: null,
                checkEmptyRespone: !1,
                strict: null,
                parentInput: null,
                verify: !1,
                spinner: !0,
                open: null,
                close: null,
                send: null,
                receive: null,
                select: null,
                check: null,
                change: null,
                openBefore: null,
                closeBefore: null,
                sendBefore: null,
                selectBefore: null,
                checkBefore: null,
                source: function(e, n) {
                    t.kladr.api(e, n)
                },
                labelFormat: function(e, n) {
                    var r;
                    if (n.oneString) return e.parents ? (r = [].concat(e.parents), r.push(e), t.kladr.buildAddress(r)) : (e.typeShort ? e.typeShort + ". " : "") + e.name;
                    var a, i, o, l, u = "";
                    return e.typeShort && (u += e.typeShort + ". "), a = e.name, i = a.toLowerCase(), o = n.name.toLowerCase(), l = i.indexOf(o), l = ~l ? l : 0, o.length < i.length ? (u += a.substr(0, l), u += "<strong>", u += a.substr(l, o.length), u += "</strong>", u += a.substr(l + o.length)) : u += "<strong>" + a + "</strong>", u
                },
                valueFormat: function(e, n) {
                    var r;
                    return n.oneString ? e.parents ? (r = [].concat(e.parents), r.push(e), t.kladr.buildAddress(r)) : (e.typeShort ? e.typeShort + ". " : "") + e.name : e.name
                },
                showSpinner: function(t) {
                    var e = -.2,
                        n = setInterval(function() {
                            return t.is(":visible") ? (t.css("background-position", "0% " + e + "%"), e += 5.555556, void(e > 95 && (e = -.2))) : (clearInterval(n), void(n = null))
                        }, 30);
                    t.show()
                },
                hideSpinner: function(t) {
                    t.hide()
                }
            },
            d = {
                current: null,
                controller: null
            },
            c = {
                up: 38,
                down: 40,
                enter: 13
            };
        t.kladr = t.extend(t.kladr, {
            setDefault: function(t, e) {
                var n = i(t, e);
                if (n.obj)
                    for (var r in n.obj) l(u, r) && (u[r] = n.obj[r]);
                else n.str && !n.isGet && l(u, n.str[0]) && (u[n.str[0]] = n.str[1])
            },
            getDefault: function(t) {
                return l(u, t) ? u[t] : void 0
            },
            getInputs: function(e) {
                var r = t(e || n.body),
                    a = "[data-kladr-type]";
                return r.filter(a).add(r.find(a))
            },
            setValues: function(e, n) {
                var r, a, i = "kladr_change.setvalues",
                    o = t.kladr.type,
                    u = {},
                    d = [];
                if (~t.inArray(t.type(e), ["object", "array"])) {
                    t.each(e, function(t, e) {
                        if (e) {
                            var n = e.contentType || e.type || t;
                            l(o, n) && (u[n] = e)
                        }
                    });
                    for (a in o) l(o, a) && u[a] && (d[a] = u[a]);
                    r = t.kladr.getInputs(n),
                        function c() {
                            var t, e, n;
                            for (e in d)
                                if (l(d, e)) {
                                    n = d[e], delete d[e];
                                    break
                                }
                            if (e) return t = r.filter('[data-kladr-type="' + e + '"]'), t.length ? void t.on(i, function() {
                                t.off(i), c()
                            }).kladr("controller").setValue(n) : void c()
                        }()
                }
            },
            getAddress: function(e, n) {
                var r, a = t.kladr.getInputs(e),
                    i = t.kladr.type,
                    o = {},
                    u = {};
                a.each(function() {
                    var e, n, r, a = t(this);
                    if (a.attr("data-kladr-id"))
                        if (e = a.kladr("current"), a.attr("data-kladr-one-string") && e.parents)
                            for (n = [].concat(e.parents), n.push(e), r = 0; r < n.length; r++) o[n[r].contentType] = n[r];
                        else o[a.attr("data-kladr-type")] = e;
                    else o[a.attr("data-kladr-type")] = a.val()
                });
                for (r in i) l(i, r) && o[r] && (u[r] = o[r]);
                return (n || t.kladr.buildAddress)(u)
            },
            buildAddress: function(e) {
                var n = [],
                    r = "",
                    a = "";
                return t.each(e, function(e, i) {
                    var o, l = "",
                        u = "";
                    if ("object" === t.type(i)) {
                        for (o = 0; o < n.length; o++)
                            if (n[o] == i.id) return;
                        n.push(i.id), l = i.name, u = i.typeShort + ". ", a = i.zip || a
                    } else l = i;
                    r && (r += ", "), r += u + l
                }), r = (a ? a + ", " : "") + r
            }
        }), t.fn.kladr = function(e, n) {
            var r = i(e, n),
                o = null;
            return this.each(function() {
                var e = a(t(this), r);
                return r.isGet ? (o = e, !1) : void 0
            }), r.isGet ? o : this
        }
    }(jQuery, window, document),
    function(t) {
        t.fn.kladrZip = function(e) {
            return this.keydown(function(e) {
                var n = e.charCode || e.keyCode || 0,
                    r = 8 == n || 9 == n || 13 == n || 46 == n || 110 == n || 190 == n || n >= 35 && 40 >= n || n >= 96 && 105 >= n;
                return t(this).val().length >= 6 ? r : r || n >= 48 && 57 >= n
            }), this.keyup(function() {
                function n(t) {
                    t ? r.addClass("kladr-error") : r.removeClass("kladr-error")
                }
                var r = t(this),
                    a = r.val();
                return a ? void t.kladr.api({
                    type: t.kladr.type.building,
                    zip: a,
                    withParents: !0,
                    limit: 1
                }, function(r) {
                    var a = r.length && r[0];
                    r = [], a ? (n(!1), a.parents && (r = r.concat(a.parents)), r.push(a), t.kladr.setValues(r, e)) : n(!0)
                }) : void n(!1)
            }), this
        }
    }(jQuery);
// Login page /start
"use strict";
$().ready(function() {
    function fragment(fragmentClass) {
        $(".fragments .active").removeClass("active");
        $("."+fragmentClass).addClass("active");
        centerdAlternative();
    }
    $(".fragmentChanger").click(function() {
        var fragmentClass = $(this).attr("data");
        console.log(fragmentClass);
        fragment(fragmentClass);
    });
    function centerdAlternative() {
        var e = $(".fragments .active .alternative");
        var ww = $(".fragments .active").width();
        var w = e.width();
        $(".alternative").css({"margin-left": (ww - w) / 2  + "px"});
        console.log({
            window:ww,
            w:w,
            result: ww-w
        });
    }
    centerdAlternative();
});
// Login page /stop
// INCLUDE HEADER /start
"use strict";
$().ready(function() {
    var debug = false;
    var is_open = false;
    var menu_item = $(".menu-block-header .menu-items .menu-item");
    menu_item.on("click, mouseover", function() {
        var has_sub = $(this).has(".menu-level-2").length;
        if(!is_open && has_sub) {
            var menu_level_2 = $(this).find(".menu-level-2");
            is_open = true;
            menu_item.removeClass("open");
            $(this).addClass("open");
            var win_w = window.innerWidth;
            var b = $(this).width();
            var w = menu_level_2.width();
            // Адаптив
            if(1170 > win_w && win_w >= 1024) {
                menu_level_2.css({"left": ( (b - w) / 2) + "px"});
            }
            // Выход за страницу
            var offset = menu_level_2.offset();
            var R = offset.left + w;
            var D = + $(".menu-block-header .menu-items").width() + $(".menu-block-header .menu-items").offset().left;

            if( !menu_level_2.attr('optimal') ) {
                if (R > D) {
                    var m_w = $(".menu-block-header .menu-items").width();
                    var P = (win_w - m_w) / 2;
                    var F = R - P;
                    var now_left = $(this).css('left').replace(/[^-\d\.]/g, '');
                    var left = now_left - (F - m_w);
                    menu_level_2.css({"left": left + "px"});
                    menu_level_2.attr({'optimal':true});
                }
            }
            var has = menu_level_2.has(".back").length;
            if (!has ) {
                var name = $(this).find("> a .menu-item-name").html();
                menu_level_2.prepend('<div class="back"><span class="korsar-icon arrow-back"></span><span class="name">' + name + '</span></div>');
            }
        }
   });
    menu_item.on("click, mouseout", function(e) {
        e.stopPropagation();
        if(is_open) {
            is_open = false;
            menu_item.removeClass("open");
        }
    });
    menu_item.on("click", ".back .arrow-back", function(e) {
        e.stopPropagation();
        $(this).closest(".open").removeClass("open");
        is_open = false;
    });
});

// INCLUDE HEADER /close
// Include on ORDER PAGE !!!  /open
"use strict";
$().ready(function() {
    // Filter check
    $(".delivery-option").click(function () {
        $(this).parent().find(".current").removeClass("current");
        $(this).addClass("current");
        $(".page-order .forms .step-1").css({"opacity":"1"});
        $(".page-order .forms .form-header").css({"opacity":"1"});
        switch_delivery();
    });
    // First check
    $(".delivery-option").find("input:checked").parent().addClass("current");

    var chs = "";
    function switch_delivery() {
        chs =  $(".delivery-option").find("input:checked").val();

        $(".pay-system").find("input:checked").parent().addClass("current");

        $(".del-russia").css({"display":"none"});
        $(".del-moscow").css({"display":"none"});
        $(".del-none-display").css({"display":"none"});
        $(".del-none").css({"display":"block"});

        switch (chs) {
            case "del-russia" :
                $(".del-russia").css({"display":"block"});
                break;
            case "del-moscow" :
                $(".del-moscow").css({"display":"block"});
                break;
            case "del-none" :
                $(".del-none").css({"display":"none"});
                $(".del-none-display").css({"display":"block"});
                break;
        }
    }
    switch_delivery();

    // Filter check
    $(".pay-system .item").click(function() {
        $(this).parent().find(".current").removeClass("current");
        $(this).addClass("current");
    });
    // First check
    $(".pay-system").find("input:checked").parent().addClass("current");

    // Проверка и отправка формы step-1
    $(".save-lk").click(function() {
        // Делать проверку полей
        if(check_form($(".step-1"))) {
            // TODO ajax save data here
            // В идеале получить прошлый адрес доставки и заполнить форму SыыTEP-2
            var ajax = true;
            if(ajax) {
                $(".step-2").css({"display":"block"});
                $(".step-2").css({"opacity":"1"});
                $(this).html("СОХРАНЕНО");
                $(".form-down-block .disabled").removeClass("disabled");
            }
        }
    });



    $("input.kladr").kladr({
        oneString: true
    });


    function cost_adress_action_dilevery(address) {
        $(".deliviry-cost .cost").html("Расчёт стоимости...");
        getDistanceByAddress(address, function (distance) {
            var coast = "Уточняйте у менеджера";
            if (distance < 70) {
                coast = "2500 рублей";
            }
            if (distance < 50) {
                coast = "1000 рублей";
            }
            if (distance < 30) {
                coast = "Бесплатно";
            }
            $(".deliviry-cost .cost").html(coast + " (~" + distance + "км)");
        });
    }


    var timer = null;
    $("#coast_address").keyup(function () {
        var address = $(this).val();
        clearTimeout(timer);
        timer = setTimeout(function() {
            cost_adress_action_dilevery(address);
        }, 1000)
    });

});
// Include on ORDER PAGE !!!  /close
// INCLUDE personal area page /start
"use strict";
$().ready(function() {
    function fragment(fragmentClass) {
        $(".fragments .active").removeClass("active");
        $("."+fragmentClass).addClass("active");
    }
    $(".personal-navigation .item-navigation").click(function() {
        var fragmentClass = $(this).attr("data");
        $(".personal-navigation .item-navigation").removeClass("active");
        $(this).addClass("active");
        fragment(fragmentClass);
    });
    $(".tax-system .item").click(function(){
        $(".tax-system .item").removeClass("current");
        $(this).addClass("current");
    });
    $(".open_tab").click(function() {
       $(".note-tab-content").removeClass("active");
       var c = $(this).closest(".note").find(".note-tab-content");
       c.addClass("active");
    });
});
// INCLUDE personal area page /close
// INCLUDE where good video /start
$().ready(function() {
    $(".play_video").click(function() {
        // Close old; codecs="avc1.42E01E, mp4a.40.2"
        $.each($(".video_view"), function(key, v){
            if( $(v).html() ) {
                var good_image_block = $(v).closest(".good_image_block").length ? $(v).closest(".good_image_block") : $(v).closest(".good_image");
                console.log("Old play...");
                var image = good_image_block.find("img");
                $(v).css({ "display":"none" });
                image.css({
                    "opacity":"1"
                });
                $(v).html("")
            }
        });
        var good_image_block = $(this).closest(".good_image_block").length ? $(this).closest(".good_image_block") : $(this).closest(".good_image");
        var video = good_image_block.find(".video_view");
        var image = good_image_block.find("img");
        image.css({
            "opacity":"0"
        });
        video.css({
            "display":"block",
            "width":good_image_block.width()+"px",
            "height":good_image_block.height()+"px"
        });

        // EMPTY VIDEO PATH
        var video_path = {"mp4":"video/videoplayback.mp4", "webm":"video/videoplayback.webm"};
        if(video.attr("data-video")) {
            var video_path = jQuery.parseJSON(video.attr("data-video"));
        }

        video.html( '<div class="close korsar-icon"></div>' +
                    '<video autoplay="autoplay" width="'+good_image_block.width()+'" height="'+good_image_block.height()+'" controls="controls" poster="'+image.attr("data-src")+'">'+
                        '<source src="'+video_path.mp4+'" type="video/mp4">'+ // Add more source...
                        '<source src="'+video_path.webm+'" type="video/webm">'+ // Add more source...
                        'Тег video не поддерживается вашим браузером.'+
                        '<a href="'+video_path.mp4+'">Скачайте видео</a>.'+
                    '</video>');

        video.find(".close").click(function() {
            video.css({ "display":"none" });
            image.css({
                "opacity":"1"
            });
            video.html(" ");
        });
    });
});
// INCLUDE where good video /close
// Include on HEADER !!!  /open
"use strict";
$().ready(function() {
    // Filter check
    $(".filter-items .item").click(function(e) {
        e.preventDefault();
        if($(this).find("input[type=radio]").length) {
            $(this).closest(".filter-items").find(".current").removeClass("current");
            $(this).addClass("current");
        }

        if($(this).find("input[type=checkbox]").length) {
            var t =  $(this);
            t.toggleClass("current");
            var tc =  $(this).find("input[type=checkbox]");
            tc.prop("checked", !tc.is( ":checked" ));
            console.log(  smartFilter.click(tc) );
            smartFilter.click(tc);
        }
    });

    // First check
    var is_checker_some = false;
    $(".filter-items .item").each(function(k,v) {
        var i = $(this).find("input");
        if(i.is(":checked")) {
            i.closest(".item").addClass("current");
            i.closest(".bx-filter-parameters-box").addClass("bx-active");
            is_checker_some = true;
        }
    });
    if(!is_checker_some) {
        $(".bx-filter-parameters-box:first").addClass("bx-active").find(".filter-items.items-vertical").addClass("bx-active");
    }


    // Block control viewports filters and menu on mobile
    var is_open = false;
    var is_open_filter = false;
    // Filter open close function
    $(".menu-btn-mobile-filters").click(function() {
        var elem = $(".aside-filters");
        if(is_open) {
            elem.addClass("korsar-hide");
            is_open_filter = false;
        } else {
            elem.removeClass("korsar-hide");
            is_open_filter = true;
        }
        content_display();
    });
    // Menu open close function
    $(".menu-block-header .menu-btn-mobile, .menu-block-header .menu-close").click(function() {
        var elem = $(".menu-block-header .menu-items");
        if(is_open_filter) {
            is_open = !is_open;
            $(".aside-filters").addClass("korsar-hide");
            is_open_filter = false;
        }
        if(is_open) {
            elem.addClass("korsar-hide");
        } else {
            elem.removeClass("korsar-hide");
        }
        content_display();
    });
    function content_display() {
        var d = is_open ? "block" : "none";
        $(".content_closer").css({"display": d});
        $("footer").css({"display": d});
        is_open = !is_open;
    }

    var cart = {}; // Some model data of cart...
    // Add item count control

    // Update mini cart
    // TODO update... Ajax... and more....
    function updateMiniCart() {
        if(!cart.items ) {
            cart.items = [];
        }
    }

    // CATALOG IMAGE
    $(".catalog-block .good_image img").each(function(k, img) {
        var img = $(img).closest(".good_image");
        var w = img.width();
        var h = w * 0.596; // 500:298
        img.height(h);
    });

    // SELECT OPEN SELECT CLOSE
    $("fieldset.select").focusin(function(){
        $(this).find(".options").css({"display":"block"});
    });
    $("fieldset.select .option").click(function(){
        var val = $(this).html();
        $(this).closest(".select").find("input").val(val);
        $(this).closest(".select").find(".options").css({"display":"none"});
    });

    $("fieldset .item").click(function(){
        $(this).closest("fieldset").find(".item.current").removeClass("current");
        $(this).addClass("current");
    });


    $("[data-tooltip]").each(function(k, e){
        var element = $(e);
        element.mouseover(function(){
            var w  = $(window).width();
            var offset = $(this).offset();
            $("body").append('<div class="tooltip">'+element.attr("data-tooltip")+'</div>');
            var t = $(".tooltip");
            if(w > (t.width() + offset.left)) {
                $(".tooltip").css({"left":(offset.left + 30) +"px", "top":(offset.top - (t.height() / 2)  )+"px"});
            } else {
                var ws = offset.left - (w - offset.left) + 10;
                $(".tooltip").css({"left":ws +"px", "top":(offset.top + $(this).height() + 10)+"px"});
            }

        });
        element.mouseout(function(element){
            $(".tooltip").remove();
        });
    });


    // UPLOAD FILE
    $('.attach-file').on(
        'dragover',
        function(e) {
            e.preventDefault();
            e.stopPropagation();
        }
    );
    $('.attach-file').on(
        'dragenter',
        function(e) {
            $(this).addClass("dragenter");
            e.preventDefault();
            e.stopPropagation();
        }
    );
    $('.attach-file').on(
        'dragleave',
        function(e) {
            $(this).removeClass("dragenter");
            e.preventDefault();
            e.stopPropagation();
        }
    )
    $('.attach-file').on(
        'drop',
        function(e){
            $(this).removeClass("dragenter");
            if(e.originalEvent.dataTransfer && e.originalEvent.dataTransfer.files.length) {
                e.preventDefault();
                e.stopPropagation();
                /*UPLOAD FILES HERE*/
                handleFiles(e.originalEvent.dataTransfer.files,  $(this));
            }
        }
    );
    $('.attach-file').on(
        'click',
        function(e){
            e.preventDefault();
            e.stopPropagation();
            $(this).find('input[type=file]').trigger('click');
        }
    );

    $('.attach-file input[type=file]').on('click', function(e){
        e.stopPropagation();
    });

    $('.attach-file input[type=file]').on('change', function(e){
        console.log($(this).files);
        e.preventDefault();
        e.stopPropagation();
        /*UPLOAD FILES HERE*/
        handleFiles(e.target.files, $(this).parent());
    });

    function handleFiles(files, obj) {
        var text = $(obj).find(".text");
        var input = $(obj).find('input[type=file]');
        input.files = files;
        if(files.length >= 1) {
            if(files.length == 1) {
                text.html(files[0].name);
            } else {
                text.html("Прикреплено файлов:" + files.length);
            }
        } else {
            text.html("+ Прикрепите файл при необходимости");
        }
    }


    $(".menu-back-link").click(function(){
        parent.history.back();
        return false;
    });

    $('.review-text-wrap').customScroll();
});

// Include on HEADER !!! /close
// INCLUDE where silder set or anyway / start
"use strict";
$().ready(function() {
    $(".swipe_slider").each(function(k, v) {
        var debug = false;
        var slider = $(v);
        var window_width = $(document).width();

        var attr = slider.attr('data-slider');
        var data_slider = {};
        if (attr) {
            data_slider = jQuery.parseJSON(attr);
        }
        var sw_lr_padding = data_slider.sw_lr_padding ? data_slider.sw_lr_padding : 20;
        slider.css({"padding-left": sw_lr_padding, "padding-right": sw_lr_padding});
        var dots_control = data_slider.dots_control ? data_slider.dots_control : false;
        var swipe_error = data_slider.swipe_error ? data_slider.swipe_error : 50;
        var arrow_control = data_slider.arrow_control ? data_slider.arrow_control : 0;
        var arrow_control_view = data_slider.arrow_control_view ? data_slider.arrow_control_view : 0;

        var full_width_touch_slider = data_slider.full_width_touch_slider ? data_slider.full_width_touch_slider : 0;

        var l_padding = data_slider.l_padding ? data_slider.l_padding : 0;


        var image_height_control = data_slider.image_height_control ? data_slider.image_height_control : false;
        /* SLIDES DISPLAYD */
        var slides_dispayd = data_slider.slides_dispayd ? data_slider.slides_dispayd : 1;
        var multiplicity_slides = data_slider.multiplicity_slides ? data_slider.multiplicity_slides : {
            320: 1,
            375: 2,
            1024: 3,
            1170: 4
        }
        $.each(multiplicity_slides, function (key, value) {
            if (window_width >= key) {
                slides_dispayd = value;
            }
        });

        var count_slide = slider.find('.slide').length;



        if(full_width_touch_slider > window_width && full_width_touch_slider != 0) {
            l_padding += (slider.find(".slides-wrap").width() / slides_dispayd) * 0.3;
            /* Изменение padding to full width */
            slider.css({"padding-left": 0, "padding-right": 0, "margin-left":"-20px", "margin-right":"-20px", "width":window_width+"px"});

        }
        //console.log([full_width_touch_slider,window_width,slides_dispayd,l_padding]);

        var w = (slider.find(".slides-wrap").width() / slides_dispayd - l_padding); // Slider width

        var max_slide_height = data_slider.max_slide_height ? data_slider.max_slide_height : 200;
        var slides_margin = 0;
        var max_slides_margin = count_slide * w;
        var slide_view = 0;

        function adaptive_slider() {

            w = (slider.find(".slides-wrap").width() / slides_dispayd - l_padding);
            max_slides_margin = count_slide * w;

            /* ARROWS */
            if (!arrow_control || arrow_control_view > window_width) {
                slider.find(".previous ").hide().addClass("forever_disabled");
                slider.find(".next ").hide().addClass("forever_disabled");
            }
            addDots();
        }

        function addDots() {
            /* DOTS */
            if (dots_control) {
                slider.find('.dots').remove();
                slider.append("<div class='dots'></div>");
                var areas = slideSAreaCount();
                for (var i = 0; areas > i; i++) {
                    slider.find(".dots").append("<div class='dot' data-goto='" + (i + 1) + "'></div>");
                }
                // centred
                slider.find(".dots").css({"left": ((slider.find(".slides-wrap").width() - slider.find(".dots").width()) / 2) + "px"});
            }
        }

        adaptive_slider();

        /* WIDTH & POSITION LEFT */
        function resize_slides(width, resizeImage) {
            var is_resize_image = resizeImage ? resizeImage : false;
            var slide_step = 0;

            slider.find('.slide').each(function (key, slide) {
                $(slide).width(width);
                $(slide).css({'left': (slide_step * width) + "px"});
                max_slide_height = (max_slide_height < $(slide).height()) ? $(slide).height() : max_slide_height;
                slide_step++;
            });

            slider.css({"height":max_slide_height+"px"});
            slider.find(".slide").css({"height":max_slide_height+"px"});
            slider.find(".slides").css({"height":max_slide_height+"px"});


            var ph = slider.find(".previous").height();
            var control_h = max_slide_height / 2 - (ph / 2);
            slider.find(".previous").css({"top": control_h + "px"});
            slider.find(".next").css({"top": control_h + "px"});

            addDots();
        }

        // Init call
        if(!image_height_control) {
            resize_slides(w, false);
        }

        if(image_height_control){
            slider.find("img").bind("load", function () {
                resize_slides(w, true);
            });
        }

        // Control event
        slider.find(".previous").click(function () {
            if (!$(this).hasClass('disabled'))
                moveSlide(slides_dispayd);
        });
        slider.find(".next").click(function () {
            if (!$(this).hasClass('disabled'))
                moveSlide(slides_dispayd * -1);
        });

        // Control swipe
        var start_x;
        var stop_x;
        var start_margin = 0;
        var max_margin_swipe = (max_slides_margin - (w * slides_dispayd)) * -1;
        var allowed_touch_derection = {'next': true, 'previous': true};

        slider.find('.slide').bind('touchstart', function (e) {
            start_margin = parseInt(slider.find('.slides').css("margin-left"));
            start_x = e.originalEvent.touches[0].pageX;
        });
        slider.find('.slide').bind('touchmove', function (e) {
            if(full_width_touch_slider != 0) {
                var move =  start_x - e.originalEvent.touches[0].pageX;
                moveSlideOnPX(move);
            }
        });
        slider.find('.slide').bind('touchend', function (e) {
            if(full_width_touch_slider == 0) {
                stop_x = e.originalEvent.changedTouches[0].clientX;
                if (start_x !== stop_x) {
                    var  condition = "";

                    if ((start_x + swipe_error) < (stop_x - swipe_error)) {
                        condition = "previous " + (start_x - swipe_error) + "<" + (stop_x + swipe_error);
                        if (allowed_touch_derection.previous) {
                            moveSlide(slides_dispayd)
                        };
                    }

                    if ((start_x - swipe_error) > (stop_x + swipe_error)) {
                        condition = "next " +(start_x - swipe_error) + ">" + (stop_x + swipe_error);
                        if (allowed_touch_derection.next) {
                            moveSlide(slides_dispayd * -1)
                        };
                    }

                    if (debug) {
                        console.log({
                            start_x: start_x,
                            start_x_e:start_x - swipe_error,
                            stop_x: stop_x,
                            stop_x_e:stop_x + swipe_error,
                            condition:condition
                        });
                    };
                }
            }
        });

        /* DOTS CONTROL */
        slider.find('.dots .dot').bind('click', function (e) {
            var vector = 0;
            var goto_num = parseInt($(this).attr('data-goto'));
            vector = ((slide_view + goto_num) - 1) * -1;
            moveSlide(vector);
        });

        /* OPEN SLIDE */
        var last_max_width = max_slide_height;
        var last_text_block_height = 0;
        slider.find('.readmore').bind('click', function(e) {
            if(!$(this).hasClass("text-block-open")) {
                var slide = $(this).closest(".slide");
                var text = slide.find(".review-text-wrap");
                var last_text_block_height = text.height();
                text.css({"height":"auto"});
                var open_text_block_height = text.height();
                text.css({"height":open_text_block_height+"px"});
                last_max_width = max_slide_height;
                var new_slide_height = open_text_block_height - last_text_block_height + last_max_width;
                slider.css({"height":new_slide_height+"px"});
                slide.css({"height":new_slide_height+"px"});
                slider.find(".slides").css({"height":new_slide_height+"px"});
                $(this).html("Свернуть");
                $(this).addClass("text-block-open");
            } else {
                closeReadmore();
            }
        });

        function closeReadmore() {
            slider.find(".slide .review-text-wrap").attr("style", "");
            slider.css({"height":last_max_width+"px"});
            slider.find(".slide").css({"height":last_max_width+"px"});
            slider.find(".slides").css({"height":last_max_width+"px"});
            slider.find(".readmore").html("Читать дальше").removeClass('text-block-open');
        }

        function moveSlide(slide_derection) {
            // slides_dispayd
            slide_view += slide_derection;
            var slide_margin_pre = slide_view * w;
            // Detect max margin
            if ((max_slides_margin * -1) >= (slide_margin_pre - w * slides_dispayd)) {
                slider.find(".next").addClass('disabled').hide();
                allowed_touch_derection.next = false;
            } else {
                slider.find(".next").removeClass('disabled').show();
                allowed_touch_derection.next = true;
            }
            // Detect min margin
            if (0 === slide_margin_pre) {
                slider.find(".previous").addClass('disabled').hide();
                allowed_touch_derection.previous = false;
            } else {
                slider.find(".previous").removeClass('disabled').show();
                allowed_touch_derection.previous = true;
            }
            slides_margin = slide_margin_pre;
            slider.find('.slides').css({'margin-left': slides_margin + "px"});
            var s = (slide_view * -1) + 1;
            slider.find('.dots .dot').removeClass("current");
            slider.find('.dots .dot:nth-child(' + s + ')').addClass("current");
            if (debug) {
                console.log({
                    slide_derection: slide_derection,
                    slide_view: slide_view,
                    allowed_touch_derection: allowed_touch_derection,
                    max_slides_margin: max_slides_margin,
                    slide_margin_pre: slide_margin_pre,
                    slides_margin: slides_margin,
                    slides_dispayd: slides_dispayd,
                    w: w,
                    s: s
                })
            };
        }

        function moveSlideOnPX(addPixels) {
            var new_margin = (start_margin-addPixels);
            if(new_margin <= 0 && max_margin_swipe <= new_margin) {
                slider.find('.slides').css({'margin-left': (start_margin-addPixels) + "px"});
            }
        }
        // Single shot
        moveSlide(0);

        // рассчитывем количество слайдов
        function slideSAreaCount() {
            var count = 0;
            count = Math.ceil(count_slide / slides_dispayd);
            return count;
        }

    });
});
// INCLUDE where silder set or anyway /close
// include anyway !!!!!! \start

//Auto Currying (автоматическое каррирование)
window.declOfNum = function(n, titles) {
    return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2];
}

function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min)) + min;
}

var rad = function(x) {
    return x * Math.PI / 180;
};
var getDistance = function(lat1, long1, lat2, long2) {
    var R = 6378137; // Earth’s mean radius in meter
    var dLat = rad(lat2 - lat1);
    var dLong = rad(long2 - long1);
    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(rad(lat1)) * Math.cos(rad(lat2)) *
        Math.sin(dLong / 2) * Math.sin(dLong / 2);
    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    var d = R * c;
    return d; // returns the distance in meter
};

function getDistanceByAddress(address, callback) {
    var pos_start = [55.753869, 37.770694]; // Оффис
    var pos_ar = [];
    var api_yandex = "d14ef91a-a8fe-4afe-afd5-c31f8b9c3066";
    $.getJSON( "https://geocode-maps.yandex.ru/1.x/?apikey="+api_yandex+"&results=1&format=json&geocode="+address, function( data ) {
        var pos = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos ? data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos : false;
        var d = false;
        if(pos) {
            var pos_ar = pos.split(" ");
            var d  = +Math.round(getDistance( +pos_start[0], +pos_start[1], +pos_ar[1], +pos_ar[0]) / 1000);
            console.log( +pos_start[0], +pos_start[1], +pos_ar[1], +pos_ar[0],  d );
        } else {
            console.log(data);
            // TODO google go coder
        }
        callback(d, pos_ar);
    });
}

// include anyway !!!!!! \close
"use strict";
function force_validate() {
    $('input:not([data-pattern=\"\"])').keyup(function(){
        validate($(this), true, false);
    });

    $('input:not([data-pattern=\"\"])').focusin(function(){
       var input = $(this);
        input.closest("fieldset").find(".tooltype").css({"display":"block"});
    });

    $('input:not([data-pattern=\"\"])').focusout(function(){
        var input = $(this);
        input.closest("fieldset").find(".tooltype").css({"display":"none"});
    });

    $('input').focusin(function() {
      var icon =  $(this).closest("fieldset").find("> .korsar-icon");
        icon.addClass("c");
    });

    $('input').focusout(function() {
        var icon =  $(this).closest("fieldset").find("> .korsar-icon");
        icon.removeClass("c");
    });
}

force_validate();


function validate(input, viewMessage, force) {
    console.log(input.val() ,input.prop('required'));


    var pattern = input.attr("data-pattern");
    var value = input.val();
    var errors = [];
    input.closest("fieldset").find(".tooltype").remove();

    var patterns = {
        cirilic: function () {
            var per_name = /^[А-Яа-я\s]{1,}$/gm;
            if (!per_name.test(value)) {
                errors.push("В поле присутствуют недопустимые символы. Вводите русские буквы.");
                return false;
            }
            return true;
        },
        email: function () {
            var per_name = /^.+@.+\..+$/gm;
            if (!per_name.test(value)) {
                errors.push("В поле присутствуют недопустимые символы. Вводите e-mail, используя английские буквы, цифры, @, тире, нижнее подчеркивание и точки");
                return false;
            }
            return true;
        },
        phone: function () {
            var per_name = /^[0-9\+\-\(\)]{11,}$/gm;
            if (!per_name.test(value)) {
                errors.push("Номер слишком короткий. Вводите номер с кодом региона для стационарных (например, 8 (495) 800-81-91) или с кодом для мобильных (через 8 или +7 для России).");
                return false;
            }
            return true;
        },
        INN: function () {
            var per_name = /(^[0-9]{10}$)|(^[0-9]{12}$)/gm;
            if (!per_name.test(value)) {
                errors.push("Не хватает цифр. ИНН для ИП состоит из 12 цифр, для компаний - из 10.");
                return false;
            }
            return true;
        },
        KPP: function () {
            var per_name = /^([0-9]{9}$)|(\-{1}$)/gm;
            if (!per_name.test(value)) {
                errors.push("Цифр менее 9. Проверьте данные. Если Вы ИП, проставьте тире “-”");
                return false;
            }
            return true;
        },
        OGRN: function () {
            var per_name = /(^[0-9]{13}$)|(^[0-9]{15}$)/gm;
            if (!per_name.test(value)) {
                errors.push("Не хватает цифр. ОГРН для ИП состоит из 15 символов, для компаний - из 13.");
                return false;
            }
            return true;
        },
        cirilic_adress: function () {
            var per_name = /^.{1,}$/gm;
            if (!per_name.test(value)) {
                errors.push("В поле присутствуют недопустимые символы. Допускаются только русские буквы, цифры, запятые и точки");
                return false;
            }
            return true;
        },
        cirilic_company_name: function () {
            var per_name = /^[А-Яа-я0-9\«\»\“\”\"\"\'\'\:\-\s]{4,}$/gm;
            if (!per_name.test(value)) {
                errors.push("В поле присутствуют недопустимые символы. Допускаются только русские буквы, цифры, «», “”, :, -");
                return false;
            }
            return true;
        },
        password: function () {
            var per_name = /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{8,}/gm;
            if (!per_name.test(value)) {
                errors.push("Придумайте надёжный пароль содержащий не менее 8-ми символов, содержащий заглвную и строчную букву латинского алфавита, цифру и символ <b>! @ # $ % ^ & *</b>");
                return false;
            }
            return true;
        },
        match: function () {
            var match = input.attr("data-pattern-match");
            if (value !== $(match).val()) {
                errors.push("Пароли должны совпадать");
                return false;
            }
            return true;
        },
        date_time: function () {
            return true;
        }
    }

    if (patterns[pattern]) {
        if (!patterns[pattern]() && (value || force) ) {
            input.closest("fieldset").append("<div class=\"tooltype\">" + errors[0] + "</div>");
            input.closest("fieldset").addClass("no-valid").removeClass("valid");
            if(viewMessage) {
                input.closest("fieldset").find(".tooltype").css({"display": "block"});
            }
            return false;
        } else {
            input.closest("fieldset").find(".tooltype").remove();
            input.closest("fieldset").removeClass("no-valid").addClass("valid");
            return true;
        }
    }
    return true;
}


function check_form(parent, on_view) {
    var r = true;
    $(parent).find('input:not([data-pattern=\"\"]):visible').each(function(k, input) {
        var v = validate($(input), false, true);
        console.log(v);
        if(!v) {
            r = false;
        }
    });
    return r;
}
// Include any way ! /start
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.inView=e():t.inView=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}var i=n(2),o=r(i);t.exports=o["default"]},function(t,e){function n(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}t.exports=n},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),o=r(i),u=n(3),f=r(u),s=n(4),c=function(){if("undefined"!=typeof window){var t=100,e=["scroll","resize","load"],n={history:[]},r={offset:{},threshold:0,test:s.inViewport},i=(0,o["default"])(function(){n.history.forEach(function(t){n[t].check()})},t);e.forEach(function(t){return addEventListener(t,i)}),window.MutationObserver&&addEventListener("DOMContentLoaded",function(){new MutationObserver(i).observe(document.body,{attributes:!0,childList:!0,subtree:!0})});var u=function(t){if("string"==typeof t){var e=[].slice.call(document.querySelectorAll(t));return n.history.indexOf(t)>-1?n[t].elements=e:(n[t]=(0,f["default"])(e,r),n.history.push(t)),n[t]}};return u.offset=function(t){if(void 0===t)return r.offset;var e=function(t){return"number"==typeof t};return["top","right","bottom","left"].forEach(e(t)?function(e){return r.offset[e]=t}:function(n){return e(t[n])?r.offset[n]=t[n]:null}),r.offset},u.threshold=function(t){return"number"==typeof t&&t>=0&&t<=1?r.threshold=t:r.threshold},u.test=function(t){return"function"==typeof t?r.test=t:r.test},u.is=function(t){return r.test(t,r)},u.offset(0),u}};e["default"]=c()},function(t,e){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=function(){function t(e,r){n(this,t),this.options=r,this.elements=e,this.current=[],this.handlers={enter:[],exit:[]},this.singles={enter:[],exit:[]}}return r(t,[{key:"check",value:function(){var t=this;return this.elements.forEach(function(e){var n=t.options.test(e,t.options),r=t.current.indexOf(e),i=r>-1,o=n&&!i,u=!n&&i;o&&(t.current.push(e),t.emit("enter",e)),u&&(t.current.splice(r,1),t.emit("exit",e))}),this}},{key:"on",value:function(t,e){return this.handlers[t].push(e),this}},{key:"once",value:function(t,e){return this.singles[t].unshift(e),this}},{key:"emit",value:function(t,e){for(;this.singles[t].length;)this.singles[t].pop()(e);for(var n=this.handlers[t].length;--n>-1;)this.handlers[t][n](e);return this}}]),t}();e["default"]=function(t,e){return new i(t,e)}},function(t,e){"use strict";function n(t,e){var n=t.getBoundingClientRect(),r=n.top,i=n.right,o=n.bottom,u=n.left,f=n.width,s=n.height,c={t:o,r:window.innerWidth-u,b:window.innerHeight-r,l:i},a={x:e.threshold*f,y:e.threshold*s};return c.t>e.offset.top+a.y&&c.r>e.offset.right+a.x&&c.b>e.offset.bottom+a.y&&c.l>e.offset.left+a.x}Object.defineProperty(e,"__esModule",{value:!0}),e.inViewport=n},function(t,e){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(e,function(){return this}())},function(t,e,n){var r=n(5),i="object"==typeof self&&self&&self.Object===Object&&self,o=r||i||Function("return this")();t.exports=o},function(t,e,n){function r(t,e,n){function r(e){var n=x,r=m;return x=m=void 0,E=e,w=t.apply(r,n)}function a(t){return E=t,j=setTimeout(h,e),M?r(t):w}function l(t){var n=t-O,r=t-E,i=e-n;return _?c(i,g-r):i}function d(t){var n=t-O,r=t-E;return void 0===O||n>=e||n<0||_&&r>=g}function h(){var t=o();return d(t)?p(t):void(j=setTimeout(h,l(t)))}function p(t){return j=void 0,T&&x?r(t):(x=m=void 0,w)}function v(){void 0!==j&&clearTimeout(j),E=0,x=O=m=j=void 0}function y(){return void 0===j?w:p(o())}function b(){var t=o(),n=d(t);if(x=arguments,m=this,O=t,n){if(void 0===j)return a(O);if(_)return j=setTimeout(h,e),r(O)}return void 0===j&&(j=setTimeout(h,e)),w}var x,m,g,w,j,O,E=0,M=!1,_=!1,T=!0;if("function"!=typeof t)throw new TypeError(f);return e=u(e)||0,i(n)&&(M=!!n.leading,_="maxWait"in n,g=_?s(u(n.maxWait)||0,e):g,T="trailing"in n?!!n.trailing:T),b.cancel=v,b.flush=y,b}var i=n(1),o=n(8),u=n(10),f="Expected a function",s=Math.max,c=Math.min;t.exports=r},function(t,e,n){var r=n(6),i=function(){return r.Date.now()};t.exports=i},function(t,e,n){function r(t,e,n){var r=!0,f=!0;if("function"!=typeof t)throw new TypeError(u);return o(n)&&(r="leading"in n?!!n.leading:r,f="trailing"in n?!!n.trailing:f),i(t,e,{leading:r,maxWait:e,trailing:f})}var i=n(7),o=n(1),u="Expected a function";t.exports=r},function(t,e){function n(t){return t}t.exports=n}])});
// IMAGE READY !
(function(e){e.fn.imageready=function(t,n){function o(){s--;!s&&t()}function u(){var e,t;this.one("load",o);t=navigator.appName.indexOf("Internet Explorer")!=-1?true:false;if(t){var n=this.attr("src"),i=n.match(/\?/)?"&":"?";i+=r.cachePrefix+"="+(new Date).getTime();this.attr("src",n+i)}}var r=e.extend({},e.fn.imageready.defaults,n),i=this.find("img").add(this.filter("img")),s=i.length;if(t==null){t=function(){}}return i.each(function(){var t=e(this);if(!t.attr("src")){o();return}this.complete||this.readyState===4?o():u.call(t)})};e.fn.imageready.defaults={cachePrefix:"random"}})(jQuery)
"use strict";

// Image auto resolution detect
inView('img.width-load-control').on('enter', function (element) {
    if(!$(element).attr('data-image-set')) {
        var window_width = $(document).width();
        var default_res = 's';

        // Object to set resolution
        var resolution_set = {
            'xs': 0,
            's': 375,
            'm': 480,
            'sl': 768,
            'l': 1024,
            '320':0,
            '375':375,
            '480':480,
            '768':768,
            '1024':1024,
            '1140':1140
        };

        var images = jQuery.parseJSON($(element).attr('data-loader'));

        var choseRes = function(ar, img) {
            var r = null;
            $.each(ar, function (key, value) {
                if (window_width >= value && img[key]) {
                    r = key;
                }
            });
            return r;
        };

        default_res = choseRes(resolution_set, images);
        console.log(default_res);
        var special_res;
        if (images.resolution) {
            special_res = choseRes(images.resolution, images);
        }
        var r = special_res ? special_res : default_res;
        var img = "http://92.53.104.143/local/templates/korsar/images/svg/photo.svg";



        if(r) {
            if(images[r]) {
                img = images[r];
            }
            console.log(img, images[r]);
            $(element).attr({'src': img});
        } else{
            if($(element).attr("data-src")) {
                img = $(element).attr("data-src");
            }
            console.log(img, $(element).attr("data-src") );
            $(element).attr({'src':img});
        }

        $(element).attr('data-image-set', true);

        $(element).parent().imageready( function() {
            $(element).css({"opacity":"1"});
        });
    }
});

$().ready(function() {
    $('.background_lizy_load').css({
        "opacity": 0,
        "transition": "all 0.4s"
    });
    inView('.background_lizy_load').on('enter', function (element) {
        $(element).css({
            "background-image": "url("+$(element).attr('data-src')+")",
            "opacity":1
        });
    });

    $('img.lizy_load').css({
        "transition": "all 0.4s",
        "opacity": 0,
    }).closest(".img_with_sadow").find(".shadow").css({
        "transition": "all 1s",
        "opacity": 0,
    });
    inView('img.lizy_load').on('enter', function (element) {
        $(element).attr({
            "src": $(element).attr('data-src')
        });
        $(element).imageready( function() {
            $(element).css({"opacity":"1"}).closest(".img_with_sadow").find(".shadow").css({"opacity": 1,});
        });
    });
});
// Include any way ! /stop
$(document).ready(function(){

    $(".call-modal").unbind('click').on('click', function(e) {
        e.preventDefault();
        var d = $(this).attr('data-target');
        $(d).css({"display":"block"}).animate({
            opacity: 1
        },200);
        return false;
    });

    $("body").unbind('click').on("click", ".korsar-modal .close", function(e) {
        e.preventDefault();
        var v  = $(this).closest(".korsar-modal").find("video");
        $.each(v, function(k, v){
            v.pause();
        });
        $(this).closest(".korsar-modal").animate({
            opacity: 0
        },200, function(){
            $(this).css({"display":"none"});
        });
        return false;
    });
});
// Register the service worker
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('js_noset/_sw_offline.js').then(function(registration) {
        // Registration was successful
        console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }).catch(function(err) {
        // registration failed :(
        console.log('ServiceWorker registration failed: ', err);
    });
}
"use strict";
// Утилиты и типографические улучшайзеры
$().ready(function() {
    var truncate = function(description, width, rows){
        var l = 50;
        var char_w = 12;
        var max_chars = (width * rows) / char_w;
        console.log(max_chars);
        if(description.split('').length > max_chars) {
            return description.split('').slice(0, description.lastIndexOf(" ", max_chars)).join('') + "...";
        }
        return description;
    }

    $(".truncate-text").each(function(key, element) {
        var width =  $(element).width();
        var t =  truncate( $(element).text(), width, 2 );
        $(element).html(t);
    });
});